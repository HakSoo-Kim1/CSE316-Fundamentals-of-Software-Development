{"ast":null,"code":"var _jsxFileName = \"/Users/haksookim/Desktop/2021 Spring/CSE 316/CSE316-Spring21-HW3/client/src/components/modals/CreateAccount.js\";\nimport React, { useState } from 'react';\nimport { REGISTER } from '../../cache/mutations';\nimport { useMutation } from '@apollo/client';\nimport { WModal, WMHeader, WMMain, WMFooter, WButton, WInput, WRow, WCol } from 'wt-frontend';\n\nconst CreateAccount = props => {\n  const [input, setInput] = useState({\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  });\n  const [loading, toggleLoading] = useState(false);\n  const [Register] = useMutation(REGISTER);\n  console.log(typeof input + \"무야호\");\n\n  const updateInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updated = { ...input,\n      [name]: value\n    };\n    setInput(updated);\n  };\n\n  const handleCreateAccount = async e => {\n    for (let field in input) {\n      if (!input[field]) {\n        alert('All fields must be filled out to register');\n        return;\n      }\n    }\n\n    const {\n      loading,\n      error,\n      data\n    } = await Register({\n      variables: { ...input\n      }\n    });\n\n    if (loading) {\n      toggleLoading(true);\n    }\n\n    ;\n\n    if (error) {\n      return `Error: ${error.message}`;\n    }\n\n    ;\n\n    if (data) {\n      console.log(data);\n      toggleLoading(false);\n\n      if (data.register.email === 'already exists') {\n        alert('User with that email already registered');\n      } else {\n        props.fetchUser();\n      }\n\n      props.setShowCreate(false);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(WModal, {\n    visible: !loading,\n    className: \"signup-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(WMHeader, {\n    className: \"modal-header\",\n    onClose: () => props.setShowCreate(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, \"Sign Up\"), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(WMMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(WRow, {\n    className: \"modal-col-gap signup-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WCol, {\n    size: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(WInput, {\n    className: \"\",\n    onBlur: updateInput,\n    name: \"firstName\",\n    labelAnimation: \"up\",\n    barAnimation: \"solid\",\n    labelText: \"First Name\",\n    wType: \"outlined\",\n    inputType: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(WCol, {\n    size: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(WInput, {\n    className: \"\",\n    onBlur: updateInput,\n    name: \"lastName\",\n    labelAnimation: \"up\",\n    barAnimation: \"solid\",\n    labelText: \"Last Name\",\n    wType: \"outlined\",\n    inputType: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(WInput, {\n    className: \"modal-input\",\n    onBlur: updateInput,\n    name: \"email\",\n    labelAnimation: \"up\",\n    barAnimation: \"solid\",\n    labelText: \"Email Address\",\n    wType: \"outlined\",\n    inputType: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(WInput, {\n    className: \"modal-input\",\n    onBlur: updateInput,\n    name: \"password\",\n    labelAnimation: \"up\",\n    barAnimation: \"solid\",\n    labelText: \"Password\",\n    wType: \"outlined\",\n    inputType: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(WButton, {\n    className: \"modal-button\",\n    onClick: handleCreateAccount,\n    span: true,\n    clickAnimation: \"ripple-light\",\n    hoverAnimation: \"darken\",\n    shape: \"rounded\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n};\n\nexport default CreateAccount;","map":{"version":3,"sources":["/Users/haksookim/Desktop/2021 Spring/CSE 316/CSE316-Spring21-HW3/client/src/components/modals/CreateAccount.js"],"names":["React","useState","REGISTER","useMutation","WModal","WMHeader","WMMain","WMFooter","WButton","WInput","WRow","WCol","CreateAccount","props","input","setInput","email","password","firstName","lastName","loading","toggleLoading","Register","console","log","updateInput","e","name","value","target","updated","handleCreateAccount","field","alert","error","data","variables","message","register","fetchUser","setShowCreate"],"mappings":"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","sourcesContent":["import React, { useState } \tfrom 'react';\nimport { REGISTER }\t\t\tfrom '../../cache/mutations';\nimport { useMutation }    \tfrom '@apollo/client';\n\nimport { WModal, WMHeader, WMMain, WMFooter, WButton, WInput, WRow, WCol } from 'wt-frontend';\n\nconst CreateAccount = (props) => {\n\tconst [input, setInput] = useState({ email: '', password: '', firstName: '', lastName: '' });\n\tconst [loading, toggleLoading] = useState(false);\n\tconst [Register] = useMutation(REGISTER);\n\tconsole.log(typeof(input)+ \"무야호\")\n\n\t\n\tconst updateInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updated = { ...input, [name]: value };\n\t\tsetInput(updated);\n\t};\n\n\tconst handleCreateAccount = async (e) => {\n\t\tfor (let field in input) {\n\t\t\tif (!input[field]) {\n\t\t\t\talert('All fields must be filled out to register');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tconst { loading, error, data } = await Register({ variables: { ...input } });\n\t\tif (loading) { toggleLoading(true) };\n\t\tif (error) { return `Error: ${error.message}` };\n\t\tif (data) {\n\t\t\tconsole.log(data)\n\t\t\ttoggleLoading(false);\n\t\t\tif(data.register.email === 'already exists') {\n\t\t\t\talert('User with that email already registered');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprops.fetchUser();\n\t\t\t}\n\t\t\tprops.setShowCreate(false);\n\n\t\t};\n\t};\n\n\treturn (\n\n\t\t<WModal visible ={!loading} className=\"signup-modal\">\n\t\t\t<WMHeader className=\"modal-header\" onClose={() => props.setShowCreate(false)}>\n\t\t\t\tSign Up\n\t\t\t</WMHeader>\n\n\t\t\t{\n\t\t\t\tloading ? <div />\n\t\t\t\t\t: <WMMain>\n\t\t\t\t\t\t<WRow className=\"modal-col-gap signup-modal\">\n\t\t\t\t\t\t\t<WCol size=\"6\">\n\t\t\t\t\t\t\t\t<WInput \n\t\t\t\t\t\t\t\t\tclassName=\"\" onBlur={updateInput} name=\"firstName\" labelAnimation=\"up\" \n\t\t\t\t\t\t\t\t\tbarAnimation=\"solid\" labelText=\"First Name\" wType=\"outlined\" inputType=\"text\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</WCol>\n\t\t\t\t\t\t\t<WCol size=\"6\">\n\t\t\t\t\t\t\t\t<WInput \n\t\t\t\t\t\t\t\t\tclassName=\"\" onBlur={updateInput} name=\"lastName\" labelAnimation=\"up\" \n\t\t\t\t\t\t\t\t\tbarAnimation=\"solid\" labelText=\"Last Name\" wType=\"outlined\" inputType=\"text\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</WCol>\n\t\t\t\t\t\t</WRow>\n\n\t\t\t\t\t\t<div className=\"modal-spacer\">&nbsp;</div>\n\t\t\t\t\t\t<WInput \n\t\t\t\t\t\t\tclassName=\"modal-input\" onBlur={updateInput} name=\"email\" labelAnimation=\"up\" \n\t\t\t\t\t\t\tbarAnimation=\"solid\" labelText=\"Email Address\" wType=\"outlined\" inputType=\"text\" \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"modal-spacer\">&nbsp;</div>\n\t\t\t\t\t\t<WInput \n\t\t\t\t\t\t\tclassName=\"modal-input\" onBlur={updateInput} name=\"password\" labelAnimation=\"up\" \n\t\t\t\t\t\t\tbarAnimation=\"solid\" labelText=\"Password\" wType=\"outlined\" inputType=\"password\" \n\t\t\t\t\t\t/>\n\t\t\t\t\t</WMMain>\n\t\t\t}\n\t\t\t<WButton className=\"modal-button\" onClick={handleCreateAccount} span clickAnimation=\"ripple-light\" hoverAnimation=\"darken\" shape=\"rounded\" color=\"primary\">\n\t\t\t\tSubmit\n\t\t\t</WButton>\n\t\t</WModal>\n\t);\n}\n\nexport default CreateAccount;\n"]},"metadata":{},"sourceType":"module"}