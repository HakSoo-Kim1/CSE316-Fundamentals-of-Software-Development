{"ast":null,"code":"var _jsxFileName = \"/Users/haksookim/Desktop/2021 Spring/CSE 316/CSE316-Spring21-HW3/client/src/components/homescreen/Homescreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport Logo from '../navbar/Logo';\nimport NavbarOptions from '../navbar/NavbarOptions';\nimport MainContents from '../main/MainContents';\nimport SidebarContents from '../sidebar/SidebarContents';\nimport Login from '../modals/Login';\nimport Delete from '../modals/Delete';\nimport CreateAccount from '../modals/CreateAccount';\nimport { GET_DB_TODOS } from '../../cache/queries';\nimport * as mutations from '../../cache/mutations';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { WNavbar, WSidebar, WNavItem } from 'wt-frontend';\nimport { WLayout, WLHeader, WLMain, WLSide } from 'wt-frontend';\nimport { UpdateListField_Transaction, UpdateListItems_Transaction, ReorderItems_Transaction, EditItem_Transaction, SortItems_Transaction } from '../../utils/jsTPS';\nimport WInput from 'wt-frontend/build/components/winput/WInput';\n\nconst Homescreen = props => {\n  let todolists = [];\n  const [activeList, setActiveList] = useState({});\n  const [showDelete, toggleShowDelete] = useState(false);\n  const [showLogin, toggleShowLogin] = useState(false);\n  const [showCreate, toggleShowCreate] = useState(false);\n  const [hasUndo, toggleHasUndo] = useState(false);\n  const [hasRedo, toggleHasRedo] = useState(false);\n  const [ChangeTodolistsTop] = useMutation(mutations.CHANGE_TODOLISTS_TOP);\n  const [SortByColumn] = useMutation(mutations.SORT_BY_COLUMN);\n  const [ReorderTodoItems] = useMutation(mutations.REORDER_ITEMS);\n  const [UpdateTodoItemField] = useMutation(mutations.UPDATE_ITEM_FIELD);\n  const [UpdateTodolistField] = useMutation(mutations.UPDATE_TODOLIST_FIELD);\n  const [DeleteTodolist] = useMutation(mutations.DELETE_TODOLIST);\n  const [DeleteTodoItem] = useMutation(mutations.DELETE_ITEM);\n  const [AddTodolist] = useMutation(mutations.ADD_TODOLIST);\n  const [AddTodoItem] = useMutation(mutations.ADD_ITEM);\n  console.log(typeof activeList);\n  console.log(typeof setActiveList);\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_DB_TODOS);\n\n  if (loading) {\n    console.log(loading, 'loading');\n  }\n\n  if (error) {\n    console.log(error, 'error');\n  }\n\n  if (data) {\n    todolists = data.getAllTodos;\n  }\n\n  const auth = props.user === null ? false : true;\n\n  window.onkeydown = async event => {\n    if ((event.key === \"z\" || event.key === \"Z\") && event.ctrlKey) {\n      tpsUndo();\n    }\n\n    if ((event.key === \"y\" || event.key === \"Y\") && event.ctrlKey) {\n      tpsRedo();\n    }\n  };\n\n  const refetchTodos = async refetch => {\n    const {\n      loading,\n      error,\n      data\n    } = await refetch();\n\n    if (data) {\n      todolists = data.getAllTodos;\n\n      if (activeList._id) {\n        let tempID = activeList._id;\n        let list = todolists.find(list => list._id === tempID);\n        setActiveList(list);\n      }\n\n      return true;\n    } else return false;\n  };\n\n  const tpsUndo = async () => {\n    const retVal = await props.tps.undoTransaction();\n    refetchTodos(refetch);\n    toggleHasRedo(props.tps.hasTransactionToRedo());\n    toggleHasUndo(props.tps.hasTransactionToUndo());\n    return retVal;\n  };\n\n  const tpsRedo = async () => {\n    const retVal = await props.tps.doTransaction();\n    refetchTodos(refetch);\n    toggleHasRedo(props.tps.hasTransactionToRedo());\n    toggleHasUndo(props.tps.hasTransactionToUndo());\n    return retVal;\n  };\n\n  const checkActiveList = () => {\n    if (activeList._id) {\n      return true;\n    } else {\n      return false;\n    }\n  }; // Creates a default item and passes it to the backend resolver.\n  // The return id is assigned to the item, and the item is appended\n  //  to the local cache copy of the active todolist. \n\n\n  const addItem = async () => {\n    let list = activeList;\n    const items = list.items;\n    const maxId = Math.max.apply(Math, items.map(function (item) {\n      return item.id;\n    }));\n    const newID = items.length >= 1 ? maxId + 1 : 0;\n    const newItem = {\n      _id: '',\n      id: newID,\n      description: 'No Description',\n      due_date: 'No Date',\n      assigned_to: \"Not Assigned\",\n      completed: false\n    };\n    let opcode = 1;\n    let itemID = newItem._id;\n    let listID = activeList._id;\n    let transaction = new UpdateListItems_Transaction(listID, itemID, newItem, opcode, AddTodoItem, DeleteTodoItem);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const deleteItem = async (item, index) => {\n    let listID = activeList._id;\n    let itemID = item._id;\n    let opcode = 0;\n    let itemToDelete = {\n      _id: item._id,\n      id: item.id,\n      description: item.description,\n      due_date: item.due_date,\n      assigned_to: item.assigned_to,\n      completed: item.completed\n    };\n    let transaction = new UpdateListItems_Transaction(listID, itemID, itemToDelete, opcode, AddTodoItem, DeleteTodoItem, index);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const editItem = async (itemID, field, value, prev) => {\n    let flag = 0;\n    if (field === 'completed') flag = 1;\n    let listID = activeList._id;\n    let transaction = new EditItem_Transaction(listID, itemID, field, prev, value, flag, UpdateTodoItemField);\n    props.tps.addTransaction(transaction); // await refetchTodos(refetch);\n\n    tpsRedo();\n  };\n\n  const reorderItem = async (itemID, dir) => {\n    let listID = activeList._id;\n    let transaction = new ReorderItems_Transaction(listID, itemID, dir, ReorderTodoItems);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const sortByColumn = async sortingCriteria => {\n    let listID = activeList._id;\n    let oldItemsIds = [];\n    let itemsToSort = [];\n\n    for (let i = 0; i < activeList.items.length; i++) {\n      let item = activeList.items[i];\n      oldItemsIds.push(item.id);\n      itemsToSort.push(item);\n    }\n\n    let sortIncreasing = isInIncreasingOrder(itemsToSort, sortingCriteria);\n    let compareFunction = makeCompareFunction(sortingCriteria, sortIncreasing);\n    itemsToSort = itemsToSort.sort(compareFunction);\n    let newItemsIds = [];\n\n    for (let i = 0; i < itemsToSort.length; i++) {\n      let item = itemsToSort[i];\n      newItemsIds.push(item.id);\n    }\n\n    console.log(typeof newItemsIds[0]);\n    let transaction = new SortItems_Transaction(listID, oldItemsIds, newItemsIds, SortByColumn);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const isInIncreasingOrder = (itemsToTest, sortingCriteria) => {\n    for (let i = 0; i < itemsToTest.length - 1; i++) {\n      let a = itemsToTest[i][sortingCriteria];\n      let b = itemsToTest[i + 1][sortingCriteria];\n      let c = a > b;\n\n      if (itemsToTest[i][sortingCriteria] > itemsToTest[i + 1][sortingCriteria]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const makeCompareFunction = (criteria, increasing) => {\n    return function (item1, item2) {\n      let negate = 1;\n\n      if (increasing) {\n        negate = -1;\n      }\n\n      let value1 = item1[criteria];\n      let value2 = item2[criteria];\n\n      if (value1 < value2) {\n        return -1 * negate;\n      } else if (value1 === value2) {\n        return 0;\n      } else {\n        return 1 * negate;\n      }\n    };\n  };\n\n  const createNewList = async () => {\n    const length = todolists.length;\n    const maxId = Math.max.apply(Math, todolists.map(function (todolist) {\n      return todolist.id;\n    }));\n    const newId = length >= 1 ? maxId + 1 : 0;\n    let list = {\n      _id: '',\n      id: newId,\n      name: 'Untitled',\n      owner: props.user._id,\n      items: [],\n      top: false\n    };\n    const {\n      data\n    } = await AddTodolist({\n      variables: {\n        todolist: list\n      },\n      refetchQueries: [{\n        query: GET_DB_TODOS\n      }]\n    }); // refetch();\n    // await refetchTodos(refetch);\n    // if(data) {\n    // let _id = data.addTodolist;\n    // let newList = todolists.find(list => list._id === _id);\n    // //    if (newList){\n    // handleSetActive(newList.id)\n    // // }\n    // // handleSetActive(newList.id)\n    // ////    setActiveList(newList); \n    // } \n\n    const refetched = await refetchTodos(refetch);\n\n    if (refetched && data) {\n      let _id = data.addTodolist;\n      let newList = todolists.find(list => list._id === _id);\n      handleSetActive(newList.id);\n    }\n\n    props.tps.clearAllTransactions();\n    toggleHasRedo(props.tps.hasTransactionToRedo());\n    toggleHasUndo(props.tps.hasTransactionToUndo());\n  };\n\n  const deleteList = async _id => {\n    DeleteTodolist({\n      variables: {\n        _id: _id\n      },\n      refetchQueries: [{\n        query: GET_DB_TODOS\n      }]\n    });\n    refetch();\n    setActiveList({});\n    props.tps.clearAllTransactions();\n    toggleHasRedo(props.tps.hasTransactionToRedo());\n    toggleHasUndo(props.tps.hasTransactionToUndo());\n  };\n\n  const updateListField = async (_id, field, value, prev) => {\n    let transaction = new UpdateListField_Transaction(_id, field, prev, value, UpdateTodolistField);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const updateListsIndex = async id => {\n    const todo = todolists.find(todo => todo.id === id || todo._id === id);\n    await ChangeTodolistsTop({\n      variables: {\n        new_id: todo._id\n      },\n      refetchQueries: [{\n        query: GET_DB_TODOS\n      }]\n    }); // refetch();\t\n  };\n\n  const handleSetActive = async id => {\n    updateListsIndex(id);\n    const todo = todolists.find(todo => todo.id === id || todo._id === id);\n    setActiveList(todo);\n    props.tps.clearAllTransactions();\n    toggleHasRedo(props.tps.hasTransactionToRedo());\n    toggleHasUndo(props.tps.hasTransactionToUndo());\n  };\n  /*\n  \tSince we only have 3 modals, this sort of hardcoding isnt an issue, if there\n  \twere more it would probably make sense to make a general modal component, and\n  \ta modal manager that handles which to show.\n  */\n\n\n  const setShowLogin = () => {\n    toggleShowDelete(false);\n    toggleShowCreate(false);\n    toggleShowLogin(!showLogin);\n  };\n\n  const setShowCreate = () => {\n    toggleShowDelete(false);\n    toggleShowLogin(false);\n    toggleShowCreate(!showCreate);\n  };\n\n  const setShowDelete = () => {\n    toggleShowCreate(false);\n    toggleShowLogin(false);\n    toggleShowDelete(!showDelete);\n  };\n\n  return /*#__PURE__*/React.createElement(WLayout, {\n    wLayout: \"header-lside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(WLHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(WNavbar, {\n    color: \"colored\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(WNavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(NavbarOptions, {\n    fetchUser: props.fetchUser,\n    auth: auth,\n    setShowCreate: setShowCreate,\n    setShowLogin: setShowLogin,\n    refetchTodos: refetch,\n    setActiveList: setActiveList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(WLSide, {\n    side: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(WSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }\n  }, activeList ? /*#__PURE__*/React.createElement(SidebarContents, {\n    todolists: todolists,\n    activeid: activeList.id,\n    auth: auth,\n    handleSetActive: handleSetActive,\n    createNewList: createNewList,\n    updateListField: updateListField,\n    checkActiveList: checkActiveList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 8\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(WLMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 4\n    }\n  }, activeList ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(MainContents, {\n    addItem: addItem,\n    deleteItem: deleteItem,\n    editItem: editItem,\n    reorderItem: reorderItem,\n    setShowDelete: setShowDelete,\n    activeList: activeList,\n    setActiveList: setActiveList,\n    undo: tpsUndo,\n    redo: tpsRedo,\n    hasRedo: hasRedo,\n    hasUndo: hasUndo,\n    tps: props.tps,\n    sortByColumn: sortByColumn,\n    toggleHasRedo: toggleHasRedo,\n    toggleHasUndo: toggleHasUndo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 8\n    }\n  })), showDelete && /*#__PURE__*/React.createElement(Delete, {\n    deleteList: deleteList,\n    activeid: activeList._id,\n    setShowDelete: setShowDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 20\n    }\n  }), showCreate && /*#__PURE__*/React.createElement(CreateAccount, {\n    fetchUser: props.fetchUser,\n    setShowCreate: setShowCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 20\n    }\n  }), showLogin && /*#__PURE__*/React.createElement(Login, {\n    fetchUser: props.fetchUser,\n    refetchTodos: refetch,\n    setShowLogin: setShowLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 19\n    }\n  }));\n};\n\nexport default Homescreen;","map":{"version":3,"sources":["/Users/haksookim/Desktop/2021 Spring/CSE 316/CSE316-Spring21-HW3/client/src/components/homescreen/Homescreen.js"],"names":["React","useState","useEffect","Logo","NavbarOptions","MainContents","SidebarContents","Login","Delete","CreateAccount","GET_DB_TODOS","mutations","useMutation","useQuery","WNavbar","WSidebar","WNavItem","WLayout","WLHeader","WLMain","WLSide","UpdateListField_Transaction","UpdateListItems_Transaction","ReorderItems_Transaction","EditItem_Transaction","SortItems_Transaction","WInput","Homescreen","props","todolists","activeList","setActiveList","showDelete","toggleShowDelete","showLogin","toggleShowLogin","showCreate","toggleShowCreate","hasUndo","toggleHasUndo","hasRedo","toggleHasRedo","ChangeTodolistsTop","CHANGE_TODOLISTS_TOP","SortByColumn","SORT_BY_COLUMN","ReorderTodoItems","REORDER_ITEMS","UpdateTodoItemField","UPDATE_ITEM_FIELD","UpdateTodolistField","UPDATE_TODOLIST_FIELD","DeleteTodolist","DELETE_TODOLIST","DeleteTodoItem","DELETE_ITEM","AddTodolist","ADD_TODOLIST","AddTodoItem","ADD_ITEM","console","log","loading","error","data","refetch","getAllTodos","auth","user","window","onkeydown","event","key","ctrlKey","tpsUndo","tpsRedo","refetchTodos","_id","tempID","list","find","retVal","tps","undoTransaction","hasTransactionToRedo","hasTransactionToUndo","doTransaction","checkActiveList","addItem","items","maxId","Math","max","apply","map","item","id","newID","length","newItem","description","due_date","assigned_to","completed","opcode","itemID","listID","transaction","addTransaction","deleteItem","index","itemToDelete","editItem","field","value","prev","flag","reorderItem","dir","sortByColumn","sortingCriteria","oldItemsIds","itemsToSort","i","push","sortIncreasing","isInIncreasingOrder","compareFunction","makeCompareFunction","sort","newItemsIds","itemsToTest","a","b","c","criteria","increasing","item1","item2","negate","value1","value2","createNewList","todolist","newId","name","owner","top","variables","refetchQueries","query","refetched","addTodolist","newList","handleSetActive","clearAllTransactions","deleteList","updateListField","updateListsIndex","todo","new_id","setShowLogin","setShowCreate","setShowDelete","fetchUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } \tfrom 'react';\nimport Logo \t\t\t\t\t\t\tfrom '../navbar/Logo';\nimport NavbarOptions \t\t\t\t\tfrom '../navbar/NavbarOptions';\nimport MainContents \t\t\t\t\tfrom '../main/MainContents';\nimport SidebarContents \t\t\t\t\tfrom '../sidebar/SidebarContents';\nimport Login \t\t\t\t\t\t\tfrom '../modals/Login';\nimport Delete \t\t\t\t\t\t\tfrom '../modals/Delete';\nimport CreateAccount \t\t\t\t\tfrom '../modals/CreateAccount';\nimport { GET_DB_TODOS } \t\t\t\tfrom '../../cache/queries';\nimport * as mutations \t\t\t\t\tfrom '../../cache/mutations';\nimport { useMutation, useQuery } \t\tfrom '@apollo/client';\nimport { WNavbar, WSidebar, WNavItem } \tfrom 'wt-frontend';\nimport { WLayout, WLHeader, WLMain, WLSide } from 'wt-frontend';\nimport { UpdateListField_Transaction, UpdateListItems_Transaction, \n\tReorderItems_Transaction, EditItem_Transaction ,\n\tSortItems_Transaction} \t\t\t\tfrom '../../utils/jsTPS';\nimport WInput from 'wt-frontend/build/components/winput/WInput';\n\n\nconst Homescreen = (props) => {\n\n\tlet todolists \t\t\t\t\t\t\t= [];\n\tconst [activeList, setActiveList] \t\t= useState({});\n\tconst [showDelete, toggleShowDelete] \t= useState(false);\n\tconst [showLogin, toggleShowLogin] \t\t= useState(false);\n\tconst [showCreate, toggleShowCreate] \t= useState(false);\n\tconst [hasUndo, toggleHasUndo] \t= useState(false);\n\tconst [hasRedo, toggleHasRedo] \t= useState(false);\n\n\tconst [ChangeTodolistsTop] \t\t= useMutation(mutations.CHANGE_TODOLISTS_TOP);\n\tconst [SortByColumn] \t\t\t= useMutation(mutations.SORT_BY_COLUMN);\n\tconst [ReorderTodoItems] \t\t= useMutation(mutations.REORDER_ITEMS);\n\tconst [UpdateTodoItemField] \t= useMutation(mutations.UPDATE_ITEM_FIELD);\n\tconst [UpdateTodolistField] \t= useMutation(mutations.UPDATE_TODOLIST_FIELD);\n\tconst [DeleteTodolist] \t\t\t= useMutation(mutations.DELETE_TODOLIST);\n\tconst [DeleteTodoItem] \t\t\t= useMutation(mutations.DELETE_ITEM);\n\tconst [AddTodolist] \t\t\t= useMutation(mutations.ADD_TODOLIST);\n\tconst [AddTodoItem] \t\t\t= useMutation(mutations.ADD_ITEM);\n\n\tconsole.log(typeof(activeList));\n\tconsole.log(typeof(setActiveList));\n\n\tconst { loading, error, data, refetch } = useQuery(GET_DB_TODOS);\n\tif(loading) { console.log(loading, 'loading'); }\n\tif(error) { console.log(error, 'error'); }\n\tif(data) { \n\t\ttodolists = data.getAllTodos; }\n\n\tconst auth = props.user === null ? false : true;\n\n\twindow.onkeydown = async (event) => {\n\t\tif((event.key === \"z\" || event.key ===\"Z\") && event.ctrlKey){\n\t\t\ttpsUndo();\n\t\t}\n\t\tif((event.key === \"y\" || event.key ===\"Y\") && event.ctrlKey){\n\t\t\ttpsRedo();\n\t\t}\n\t}\n\n\tconst refetchTodos = async (refetch) => {\n\t\tconst { loading, error, data } = await refetch();\n\t\tif (data) {\n\t\t todolists = data.getAllTodos;\n\t\t if (activeList._id) {\n\t\t  let tempID = activeList._id;\n\t\t  let list = todolists.find(list => list._id === tempID);\n\t\t  setActiveList(list);\n\t\t }\n\t\t return true\n\t\t}\n\t\telse return false;\n\t   }\n\n\t\n\tconst tpsUndo = async () => {\n\t\tconst retVal = await props.tps.undoTransaction();\n\t\trefetchTodos(refetch);\n\t\ttoggleHasRedo(props.tps.hasTransactionToRedo());\n\t\ttoggleHasUndo(props.tps.hasTransactionToUndo());\n\t\treturn retVal;\n\t}\n\n\tconst tpsRedo = async () => {\n\t\tconst retVal = await props.tps.doTransaction();\n\t\trefetchTodos(refetch);\n\t\ttoggleHasRedo(props.tps.hasTransactionToRedo());\n\t\ttoggleHasUndo(props.tps.hasTransactionToUndo());\n\t\treturn retVal;\n\t}\n\n\tconst checkActiveList = () => {\n\t\tif (activeList._id){\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t// Creates a default item and passes it to the backend resolver.\n\t// The return id is assigned to the item, and the item is appended\n\t//  to the local cache copy of the active todolist. \n\tconst addItem = async () => {\n\t\tlet list = activeList;\n\t\tconst items = list.items;\n\t\tconst maxId = Math.max.apply(Math, items.map(function(item) { return item.id; }))\n\t\tconst newID = items.length >= 1 ? maxId + 1 : 0;\n\t\tconst newItem = {\n\t\t\t_id: '',\n\t\t\tid: newID,\n\t\t\tdescription: 'No Description',\n\t\t\tdue_date: 'No Date',\n\t\t\tassigned_to: \"Not Assigned\",\n\t\t\tcompleted: false\n\t\t};\n\t\tlet opcode = 1;\n\t\tlet itemID = newItem._id;\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new UpdateListItems_Transaction(listID, itemID, newItem, opcode, AddTodoItem, DeleteTodoItem);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\t};\n\n\n\tconst deleteItem = async (item, index) => { \n\t\tlet listID = activeList._id;\n\t\tlet itemID = item._id;\n\t\tlet opcode = 0;\n\t\tlet itemToDelete = {\n\t\t\t_id: item._id,\n\t\t\tid: item.id,\n\t\t\tdescription: item.description,\n\t\t\tdue_date: item.due_date,\n\t\t\tassigned_to: item.assigned_to,\n\t\t\tcompleted: item.completed\n\t\t}\n\t\tlet transaction = new UpdateListItems_Transaction(listID, itemID, itemToDelete, opcode, AddTodoItem, DeleteTodoItem, index);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\t};\n\n\tconst editItem = async (itemID, field, value, prev) => {\n\t\tlet flag = 0;\n\t\tif (field === 'completed') flag = 1;\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new EditItem_Transaction(listID, itemID, field, prev, value, flag, UpdateTodoItemField);\n\t\tprops.tps.addTransaction(transaction);\n\t\t// await refetchTodos(refetch);\n\t\ttpsRedo();\n\t};\n\n\tconst reorderItem = async (itemID, dir) => {\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new ReorderItems_Transaction(listID, itemID, dir, ReorderTodoItems);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\n\t};\n\n\tconst sortByColumn = async (sortingCriteria) => {\n\t\tlet listID = activeList._id;\n\t\tlet oldItemsIds = [];\n    \tlet itemsToSort = [];\n\t\tfor (let i = 0; i < activeList.items.length; i++) {\n\t\t\tlet item = activeList.items[i];\n\t\t\toldItemsIds.push(item.id);\n\t\t\titemsToSort.push(item);\n\t\t  }\n\t\tlet sortIncreasing = isInIncreasingOrder(itemsToSort, sortingCriteria);\n\t\tlet compareFunction = makeCompareFunction(sortingCriteria, sortIncreasing);\n\t\titemsToSort = itemsToSort.sort(compareFunction);\n\t\tlet newItemsIds = [];\n\t\tfor (let i = 0; i < itemsToSort.length; i++) {\n\t\t\tlet item = itemsToSort[i];\n\t\t\tnewItemsIds.push(item.id);\n\t\t  }\n\t\tconsole.log(typeof(newItemsIds[0]));\n\t\tlet transaction = new SortItems_Transaction (listID, oldItemsIds, newItemsIds, SortByColumn);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\t}\n\nconst isInIncreasingOrder = (itemsToTest, sortingCriteria) => {\n\tfor (let i = 0; i < itemsToTest.length - 1; i++) {\n\t\tlet a = itemsToTest[i][sortingCriteria];\n\t\tlet b = itemsToTest[i + 1][sortingCriteria];\n\t\tlet c = a>b\n\t  if (itemsToTest[i][sortingCriteria] > itemsToTest[i + 1][sortingCriteria]){\n\t\treturn false;\n\t  }\n\t}\n\treturn true;\n}\n\nconst makeCompareFunction = (criteria, increasing) => {\n\treturn function (item1, item2) {\n\t  let negate = 1;\n\t  if (increasing) {\n\t\tnegate = -1;\n\t  }\n\t  let value1 = item1[criteria];\n\t  let value2 = item2[criteria];\n\t  if (value1 < value2) {\n\t\treturn -1 * negate;\n\t  }\n\t  else if (value1 === value2) {\n\t\treturn 0;\n\t  }\n\t  else {\n\t\treturn 1 * negate;\n\t  }\n\t}\n  }\n\n\n\tconst createNewList = async () => {\n\t\tconst length = todolists.length\n\t\tconst maxId = Math.max.apply(Math, todolists.map(function(todolist) { return todolist.id; }))\n\t\tconst newId = length >= 1 ? maxId + 1 : 0;\n\t\tlet list = {\n\t\t\t_id: '',\n\t\t\tid: newId,\n\t\t\tname: 'Untitled',\n\t\t\towner: props.user._id,\n\t\t\titems: [],\n\t\t\ttop: false\n\t\t}\n\t\tconst { data } = await AddTodolist({ variables: { todolist: list }, refetchQueries: [{ query: GET_DB_TODOS }] });\n\t\t// refetch();\n\t\t// await refetchTodos(refetch);\n  \t\t// if(data) {\n   \t\t// let _id = data.addTodolist;\n   \t\t// let newList = todolists.find(list => list._id === _id);\n\t\t// //    if (newList){\n\t\t// handleSetActive(newList.id)\n\t\t// // }\n   \t\t// // handleSetActive(newList.id)\n\t\t// ////    setActiveList(newList); \n  \t\t// } \n\t\tconst refetched = await refetchTodos(refetch);\n\t\tif(refetched && data) {\n\t\tlet _id = data.addTodolist;\n\t\t\n\t\tlet newList = todolists.find(list => list._id === _id);\n\t\thandleSetActive(newList.id)\n\t\t}\n\t\t\n\t\tprops.tps.clearAllTransactions();\n\t\ttoggleHasRedo(props.tps.hasTransactionToRedo());\n\t\ttoggleHasUndo(props.tps.hasTransactionToUndo());\n\n\t};\n\n\tconst deleteList = async (_id) => {\n\t\tDeleteTodolist({ variables: { _id: _id }, refetchQueries: [{ query: GET_DB_TODOS }] });\n\t\trefetch();\n\t\tsetActiveList({});\n\t\tprops.tps.clearAllTransactions();\n\t\ttoggleHasRedo(props.tps.hasTransactionToRedo());\n\t\ttoggleHasUndo(props.tps.hasTransactionToUndo());\n\n\t};\n\n\tconst updateListField = async (_id, field, value, prev) => {\n\t\tlet transaction = new UpdateListField_Transaction(_id, field, prev, value, UpdateTodolistField);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\t};\n\n\tconst updateListsIndex = async (id) =>{\n\t\tconst todo = todolists.find(todo => todo.id === id || todo._id === id);\n\t\tawait ChangeTodolistsTop({ variables: {new_id: todo._id },refetchQueries: [{ query: GET_DB_TODOS }] });\n\t\t// refetch();\t\n\t}\n\n\tconst handleSetActive = async (id) => {\n\t\tupdateListsIndex(id)\n\t\tconst todo = todolists.find(todo => todo.id === id || todo._id === id);\n\t\tsetActiveList(todo);\n\t\tprops.tps.clearAllTransactions();\n\t\ttoggleHasRedo(props.tps.hasTransactionToRedo());\n\t\ttoggleHasUndo(props.tps.hasTransactionToUndo());\n\t};\n\n\t/*\n\t\tSince we only have 3 modals, this sort of hardcoding isnt an issue, if there\n\t\twere more it would probably make sense to make a general modal component, and\n\t\ta modal manager that handles which to show.\n\t*/\n\tconst setShowLogin = () => {\n\t\ttoggleShowDelete(false);\n\t\ttoggleShowCreate(false);\n\t\ttoggleShowLogin(!showLogin);\n\t};\n\n\tconst setShowCreate = () => {\n\t\ttoggleShowDelete(false);\n\t\ttoggleShowLogin(false);\n\t\ttoggleShowCreate(!showCreate);\n\t};\n\n\tconst setShowDelete = () => {\n\t\ttoggleShowCreate(false);\n\t\ttoggleShowLogin(false);\n\t\ttoggleShowDelete(!showDelete)\n\t}\n\n\treturn (\n\t\t<WLayout wLayout=\"header-lside\">\n\t\t\t<WLHeader>\n\t\t\t\t<WNavbar color=\"colored\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<WNavItem>\n\t\t\t\t\t\t\t<Logo className='logo' />\n\t\t\t\t\t\t</WNavItem>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<NavbarOptions\n\t\t\t\t\t\t\tfetchUser={props.fetchUser} auth={auth} \n\t\t\t\t\t\t\tsetShowCreate={setShowCreate} setShowLogin={setShowLogin}\n\t\t\t\t\t\t\trefetchTodos={refetch} setActiveList={setActiveList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ul>\n\t\t\t\t</WNavbar>\n\t\t\t</WLHeader>\n\n\t\t\t<WLSide side=\"left\">\n\t\t\t\t<WSidebar>\n\t\t\t\t\t{\n\t\t\t\t\t\tactiveList ?\n\t\t\t\t\t\t\t<SidebarContents\n\t\t\t\t\t\t\t\ttodolists={todolists} activeid={activeList.id} auth={auth}\n\t\t\t\t\t\t\t\thandleSetActive={handleSetActive} createNewList={createNewList}\n\t\t\t\t\t\t\t\tupdateListField={updateListField}\tcheckActiveList = {checkActiveList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</WSidebar>\n\t\t\t</WLSide>\n\t\t\t<WLMain>\n\t\t\t\t{\n\t\t\t\t\tactiveList ? \n\t\t\t\t\t\t\t<div className=\"container-secondary\">\n\t\t\t\t\t\t\t\t<MainContents\n\t\t\t\t\t\t\t\t\taddItem={addItem} deleteItem={deleteItem}\n\t\t\t\t\t\t\t\t\teditItem={editItem} reorderItem={reorderItem}\n\t\t\t\t\t\t\t\t\tsetShowDelete={setShowDelete}\n\t\t\t\t\t\t\t\t\tactiveList={activeList} setActiveList={setActiveList}\n\t\t\t\t\t\t\t\t\tundo={tpsUndo} redo={tpsRedo}\n\t\t\t\t\t\t\t\t\thasRedo = {hasRedo} hasUndo = {hasUndo} \n\t\t\t\t\t\t\t\t\ttps = {props.tps}\n\t\t\t\t\t\t\t\t\tsortByColumn = {sortByColumn}\n\t\t\t\t\t\t\t\t\ttoggleHasRedo = {toggleHasRedo}\n\t\t\t\t\t\t\t\t\ttoggleHasUndo = {toggleHasUndo}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div className=\"container-secondary\" />\n\t\t\t\t}\n\n\t\t\t</WLMain>\n\n\t\t\t{\n\t\t\t\tshowDelete && (<Delete deleteList={deleteList} activeid={activeList._id} setShowDelete={setShowDelete} />)\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tshowCreate && (<CreateAccount fetchUser={props.fetchUser} setShowCreate={setShowCreate} />)\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tshowLogin && (<Login fetchUser={props.fetchUser} refetchTodos={refetch}setShowLogin={setShowLogin} />)\n\t\t\t}\n\n\t\t</WLayout>\n\t);\n};\n\nexport default Homescreen;"]},"metadata":{},"sourceType":"module"}